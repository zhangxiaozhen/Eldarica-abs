
nonlinear2.hcc
Warning: no definition of function "nondet" available
UNSAFE

---------------------------------------------------------------
Init:
    main4(1000000.\as[signed bv[32]], 1.\as[signed bv[32]])    
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
    main4(1000000.\as[signed bv[32]], 2.\as[signed bv[32]])    
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
    main4(2000000.\as[signed bv[32]], 3.\as[signed bv[32]])    
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
    main4(6000000.\as[signed bv[32]], 4.\as[signed bv[32]])    
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
   main4(24000000.\as[signed bv[32]], 5.\as[signed bv[32]])    
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
   main4(120000000.\as[signed bv[32]], 6.\as[signed bv[32]])   
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
   main4(720000000.\as[signed bv[32]], 7.\as[signed bv[32]])   
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
   main4(745032704.\as[signed bv[32]], 8.\as[signed bv[32]])   
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
  main4(1665294336.\as[signed bv[32]], 9.\as[signed bv[32]])   
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
  main4(2102747136.\as[signed bv[32]], 10.\as[signed bv[32]])  
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
 main4((-447365120).\as[signed bv[32]], 11.\as[signed bv[32]]) 
---------------------------------------------------------------
                               |                               
                               |                               
                               V                               
 main5((-447365120).\as[signed bv[32]], 11.\as[signed bv[32]]) 
---------------------------------------------------------------
Final:
 main5((-447365120).\as[signed bv[32]], 11.\as[signed bv[32]]) 
---------------------------------------------------------------

../horn-hcc/loop1.hcc
Warning: entry function "main" not found
SAFE

../horn-hcc/loop2.hcc
Warning: entry function "main" not found
SAFE

bitwise1.hcc
SAFE

bitwise2.hcc
SAFE

MonadicInv.hcc
SAFE

bitwise3.hcc
SAFE

inconclusive.smt2
Warning: ignoring get-model
Theories: SimpleArray(1)
sat

loop.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
sat

loop2.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
unsat

0: FALSE -> 1
1: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 10)) -> 2
2: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 9)) -> 3
3: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 8)) -> 4
4: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 7)) -> 5
5: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 6)) -> 6
6: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 5)) -> 7
7: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 4)) -> 8
8: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 3)) -> 9
9: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 2)) -> 10
10: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 1)) -> 11
11: Inv(mod_cast(0, 4294967295, 19), mod_cast(0, 4294967295, 0))

mccarthy91_bv8.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
sat

mccarthy91_bv32.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
sat

multiplication.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
sat

nonlinear.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
unsat

0: FALSE -> 1
1: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 2264035265)) -> 2
2: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 452807053)) -> 3
3: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 1808548329)) -> 4
4: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 1220703125)) -> 5
5: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 244140625)) -> 6
6: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 48828125)) -> 7
7: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 9765625)) -> 8
8: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 1953125)) -> 9
9: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 390625)) -> 10
10: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 78125)) -> 11
11: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 15625)) -> 12
12: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 3125)) -> 13
13: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 625)) -> 14
14: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 125)) -> 15
15: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 25)) -> 16
16: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 5)) -> 17
17: Inv(mod_cast(0, 4294967295, 5), mod_cast(0, 4294967295, 1))

quantifier.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
unknown

0: FALSE -> 1
1: inv_main5(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295)) -> 2
2: inv_main4(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295))

substring.error.nts.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
unsat

0: FALSE -> 1
1: main_s12(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 2
2: main_s11(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 3
3: main_s10(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 4
4: main_s8(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 5
5: main_s6(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 8, 6
6: main_sinter2(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 7
7: main_s4(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 8, 10
8: NonDetInt_s1(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295)) -> 9
9: NonDetInt_s0(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295)) -> 17
10: main_sinter1(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 11
11: main_s2(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 12, 14
12: NonDetInt_s1(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647), mod_cast(0, 4294967295, 4294967295)) -> 13
13: NonDetInt_s0(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 2147483647)) -> 17
14: main_sinter0(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 15
15: main_s0(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 16
16: main_sinit(mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0), mod_cast(0, 4294967295, 0))
17: NonDetInt_sinit(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295)) -> 18
18: main_sinter0(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 19
19: main_s0(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 201), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 101), mod_cast(0, 4294967295, 4294967295)) -> 20
20: main_sinit(mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295), mod_cast(0, 4294967295, 4294967295))

test0.correct.pierre_bv8.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
sat

test0.correct.pierre_bv32.smt2
Theories: ModuloArithmetic, GroebnerMultiplication
sat
